url = "/api/menu"
layout = "default"
title = "menu"
==
<?php
function onStart()
{
    $slug     = input('slug');
    $themeDir = \Cms\Classes\Theme::getActiveTheme()->getDirName();

    if (!$slug) {
        return response()->json(['error' => 'Missing slug'], 400);
    }

    $path = base_path("themes/{$themeDir}/meta/menus/{$slug}.yaml");
    if (!\File::exists($path)) {
        return response()->json(['error' => "Menu file not found: {$slug}.yaml"], 404);
    }

    // Load the YAML definition
    $yamlParser = new \October\Rain\Parse\Yaml();
    $menuDef    = $yamlParser->parseFile($path);

    if (empty($menuDef['items']) || !is_array($menuDef['items'])) {
        return response()->json(['error' => 'Invalid menu definition'], 500);
    }

    // Recursive helper to parse items + any nested children
    $parseItems = function(array $rawItems) use (&$parseItems) {
        $out = [];
        foreach ($rawItems as $item) {
            $node = [
                'title'      => $item['title']      ?? '',
                'url'        => $item['url']        ?? '',
                'code'       => $item['code']       ?? '',
                'isHidden'   => (bool)($item['viewBag']['isHidden'] ?? 0),
                'cssClass'   =>  $item['viewBag']['cssClass']  ?? '',
                'isExternal' => (bool)($item['viewBag']['isExternal'] ?? 0),
            ];

            // If this item has children, parse them recursively
            if (!empty($item['items']) && is_array($item['items'])) {
                $node['items'] = $parseItems($item['items']);
            }

            $out[] = $node;
        }
        return $out;
    };

    // Build the top-level items (with any nested sub-menus)
    $items = $parseItems($menuDef['items']);

    return response()->json([
        'code'  => $slug,
        'name'  => $menuDef['name'] ?? $slug,
        'items' => $items,
    ]);
}
?>
==